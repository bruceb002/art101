{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bruce/Documents/GitHub/art101_clown_proj/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/bruce/Documents/GitHub/art101_clown_proj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import html2canvas from'html2canvas';import React,{useRef}from'react';import AccessoriesGrid from'./AccessoriesGrid';import ClownContainer from'./ClownContainer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var clownContainerRef=useRef(null);var handleDownload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var clownContainer,rect,width,height,canvas,dataUrl,downloadLink;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:clownContainer=clownContainerRef.current;if(clownContainer){_context.next=3;break;}return _context.abrupt(\"return\");case 3:rect=clownContainer.getBoundingClientRect();width=rect.width,height=rect.height;// Convert clownContainer to an image using html2canvas\n_context.next=7;return html2canvas(clownContainer,{width:width,height:height});case 7:canvas=_context.sent;// Get the data URL of the canvas image\ndataUrl=canvas.toDataURL();// Create a download link\ndownloadLink=document.createElement('a');downloadLink.href=dataUrl;downloadLink.download='doll_image.png';// Trigger the download\ndownloadLink.click();case 13:case\"end\":return _context.stop();}},_callee);}));return function handleDownload(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"WELCOME TO THE CLOWN ZONE\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"clownZone\",children:/*#__PURE__*/_jsx(ClownContainer,{ref:clownContainerRef})}),/*#__PURE__*/_jsxs(\"div\",{id:\"accessories\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Accessories\"}),/*#__PURE__*/_jsx(AccessoriesGrid,{})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDownload,children:\"Download Clown!\"})]})]});};export default App;","map":{"version":3,"names":["html2canvas","React","useRef","AccessoriesGrid","ClownContainer","jsx","_jsx","jsxs","_jsxs","App","clownContainerRef","handleDownload","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","clownContainer","rect","width","height","canvas","dataUrl","downloadLink","wrap","_callee$","_context","prev","next","current","abrupt","getBoundingClientRect","sent","toDataURL","document","createElement","href","download","click","stop","apply","arguments","children","id","ref","onClick"],"sources":["/Users/bruce/Documents/GitHub/art101_clown_proj/src/Components/App.js"],"sourcesContent":["import html2canvas from 'html2canvas';\nimport React, { useRef } from 'react';\nimport AccessoriesGrid from './AccessoriesGrid';\nimport ClownContainer from './ClownContainer';\n\n\nfunction App() {\n  const clownContainerRef = useRef(null);\n\n  const handleDownload = async () => {\n    const clownContainer = clownContainerRef.current;\n\n    if (!clownContainer) {\n      return;\n    }\n\n    const rect = clownContainer.getBoundingClientRect();\n    const { width, height } = rect;\n\n    // Convert clownContainer to an image using html2canvas\n    const canvas = await html2canvas(clownContainer, { width, height });\n\n    // Get the data URL of the canvas image\n    const dataUrl = canvas.toDataURL();\n\n    // Create a download link\n    const downloadLink = document.createElement('a');\n    downloadLink.href = dataUrl;\n    downloadLink.download = 'doll_image.png';\n\n    // Trigger the download\n    downloadLink.click();\n  };\n\n  return (\n    <main>\n      <div id=\"header\">\n        <h1>WELCOME TO THE CLOWN ZONE</h1>\n      </div>\n\n      <div id=\"wrapper\">\n        <div id=\"clownZone\">\n          <ClownContainer ref={clownContainerRef}/>\n        </div>\n\n        <div id=\"accessories\">\n          <h2>Accessories</h2>\n          <AccessoriesGrid />\n        </div>\n\n        <button onClick={handleDownload}>Download Clown!</button>\n      </div>\n    </main>\n  );\n};\n\nexport default App;"],"mappings":"0RAAA,MAAO,CAAAA,WAAW,KAAM,aAAa,CACrC,MAAO,CAAAC,KAAK,EAAIC,MAAM,KAAQ,OAAO,CACrC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG9C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,GAAM,CAAAC,iBAAiB,CAAGR,MAAM,CAAC,IAAI,CAAC,CAEtC,GAAM,CAAAS,cAAc,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,cAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,MAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAC,YAAA,QAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACfX,cAAc,CAAGP,iBAAiB,CAACmB,OAAO,IAE3CZ,cAAc,EAAAS,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAI,MAAA,kBAIbZ,IAAI,CAAGD,cAAc,CAACc,qBAAqB,CAAC,CAAC,CAC3CZ,KAAK,CAAaD,IAAI,CAAtBC,KAAK,CAAEC,MAAM,CAAKF,IAAI,CAAfE,MAAM,CAErB;AAAAM,QAAA,CAAAE,IAAA,SACqB,CAAA5B,WAAW,CAACiB,cAAc,CAAE,CAAEE,KAAK,CAALA,KAAK,CAAEC,MAAM,CAANA,MAAO,CAAC,CAAC,QAA7DC,MAAM,CAAAK,QAAA,CAAAM,IAAA,CAEZ;AACMV,OAAO,CAAGD,MAAM,CAACY,SAAS,CAAC,CAAC,CAElC;AACMV,YAAY,CAAGW,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAChDZ,YAAY,CAACa,IAAI,CAAGd,OAAO,CAC3BC,YAAY,CAACc,QAAQ,CAAG,gBAAgB,CAExC;AACAd,YAAY,CAACe,KAAK,CAAC,CAAC,CAAC,yBAAAZ,QAAA,CAAAa,IAAA,MAAAvB,OAAA,GACtB,kBAvBK,CAAAL,cAAcA,CAAA,SAAAC,IAAA,CAAA4B,KAAA,MAAAC,SAAA,OAuBnB,CAED,mBACEjC,KAAA,SAAAkC,QAAA,eACEpC,IAAA,QAAKqC,EAAE,CAAC,QAAQ,CAAAD,QAAA,cACdpC,IAAA,OAAAoC,QAAA,CAAI,2BAAyB,CAAI,CAAC,CAC/B,CAAC,cAENlC,KAAA,QAAKmC,EAAE,CAAC,SAAS,CAAAD,QAAA,eACfpC,IAAA,QAAKqC,EAAE,CAAC,WAAW,CAAAD,QAAA,cACjBpC,IAAA,CAACF,cAAc,EAACwC,GAAG,CAAElC,iBAAkB,CAAC,CAAC,CACtC,CAAC,cAENF,KAAA,QAAKmC,EAAE,CAAC,aAAa,CAAAD,QAAA,eACnBpC,IAAA,OAAAoC,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBpC,IAAA,CAACH,eAAe,GAAE,CAAC,EAChB,CAAC,cAENG,IAAA,WAAQuC,OAAO,CAAElC,cAAe,CAAA+B,QAAA,CAAC,iBAAe,CAAQ,CAAC,EACtD,CAAC,EACF,CAAC,CAEX,CAAC,CAED,cAAe,CAAAjC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}